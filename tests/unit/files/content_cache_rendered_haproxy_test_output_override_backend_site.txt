global
    nbthread 4
    maxconn 24576
    log /dev/log local0
    log /dev/log local1 notice
    chroot /var/lib/haproxy
    stats socket /run/haproxy/admin.sock mode 660 level admin expose-fd listeners
    stats timeout 30s
    server-state-file /run/haproxy/saved-server-state
    user haproxy
    group haproxy
    daemon

    # LP#1874386: Work around lingering HAProxy processes as per LP:1874386
    # and kill them off.
    hard-stop-after 15m

    # Default SSL material locations
    ca-base /etc/ssl/certs
    crt-base /etc/ssl/private

    # Default ciphers to use on SSL-enabled listening sockets.
    # For more information, see ciphers(1SSL). This list is from:
    #  https://hynek.me/articles/hardening-your-web-servers-ssl-ciphers/
    # An alternative list with additional directives can be obtained from
    #  https://mozilla.github.io/server-side-tls/ssl-config-generator/?server=haproxy
    ssl-default-bind-ciphers ECDHE+AESGCM:ECDHE+AES256:ECDHE+AES128:!SSLv3:!TLSv1
    ssl-default-bind-options no-sslv3 no-tlsv10 no-tlsv11
    # We'll eventually disable DHE (LP#1825321), but for now, bump DH params
    tune.ssl.default-dh-param 2048

    # Increase the SSL/TLS session cache from the default 20k. But
    # rather than hardcode values, let's just set it to match
    # global_max_connections (which by default is calculated using
    # num. of CPU cores and num. of configured sites). Each entry
    # requires ~200 bytes so on a host with say 32 CPUs, 10 sites,
    # each with 2000 max conns will only consume around 122 Mbytes
    # (32 * 10 * 2000 * 200), which is not much.
    tune.ssl.cachesize 24576

defaults
    log global
    maxconn 8192
    mode http
    option dontlognull
    timeout connect 5s
    timeout client  50s
    timeout server  50s
    errorfile 400 /etc/haproxy/errors/400.http
    errorfile 403 /etc/haproxy/errors/403.http
    errorfile 408 /etc/haproxy/errors/408.http
    errorfile 500 /etc/haproxy/errors/500.http
    errorfile 502 /etc/haproxy/errors/502.http
    errorfile 503 /etc/haproxy/errors/503.http
    errorfile 504 /etc/haproxy/errors/504.http
    load-server-state-from-file global
    unique-id-format %{+X}o\ %ci:%cp_%fi:%fp_%Ts_%rt:%pid
    unique-id-header X-Cache-Request-ID
    log-format "%ci:%cp [%tr] %ft %b/%s %TR/%Tw/%Tc/%Tr/%Ta %ST %B %CC %CS %tsc %ac/%fc/%bc/%sc/%rc %sq/%bq %hr %hs %{+Q}r %ID"

resolvers dns
    nameserver dns1 127.0.0.53:53
    resolve_retries 3
    timeout resolve 3s
    timeout retry   3s
    accepted_payload_size 8192

listen  stats
    bind 127.0.0.1:10000
    acl allowed_cidr src 127.0.0.0/8
    http-request deny unless allowed_cidr

    mode http
    stats enable
    stats uri /
    stats realm Haproxy\ Statistics
    stats auth haproxy:biometricsarenotsecret
    stats refresh 3
    no log


listen combined-443
    bind 0.0.0.0:443 ssl crt /var/lib/haproxy/certs alpn h2,http/1.1
    bind :::443 ssl crt /var/lib/haproxy/certs alpn h2,http/1.1
    capture request header X-Cache-Request-ID len 60
    use_backend backend-cached-site1-local if { hdr(Host) -i site1.local }
    use_backend backend-cached-site2-local if { hdr(Host) -i site2.local }

listen site1-local
    bind 127.0.0.1:8080
    capture request header X-Cache-Request-ID len 60
    default_backend backend-site1-local

listen site2-local
    bind 127.0.0.1:8081
    capture request header X-Cache-Request-ID len 60
    default_backend backend-site2-local

backend backend-cached-site1-local
    option httpchk GET /_status/content-cache-check HTTP/1.1\r\nHost:\ site1.local\r\nUser-Agent:\ haproxy/httpchk
    http-request set-header Host site1.local
    http-request set-header X-Forwarded-For %[src]
    balance leastconn
    server server_1 127.0.0.1:6080 check inter 2s rise 2 fall 60 maxconn 200

backend backend-site1-local
    option httpchk HEAD /swift/v1/AUTH_aabbccdd001122/mybucket/index.html HTTP/1.1\r\nHost:\ objectstorage.ps5.internal\r\nUser-Agent:\ haproxy/httpchk
    http-request set-header Host objectstorage.ps5.internal
    option redispatch 1
    balance leastconn
    server server_1 10.0.1.10:443 check inter 5s rise 2 fall 5 maxconn 200 ssl sni str(objectstorage.ps5.internal) check-sni objectstorage.ps5.internal verify required ca-file ca-certificates.crt

backend backend-cached-site2-local
    option httpchk GET /_status/content-cache-check HTTP/1.1\r\nHost:\ site2.local\r\nUser-Agent:\ haproxy/httpchk
    http-request set-header Host site2.local
    http-request set-header X-Forwarded-For %[src]
    balance leastconn
    server server_1 127.0.0.1:6081 check inter 2s rise 2 fall 60 maxconn 200

backend backend-site2-local
    option httpchk HEAD /swift/v1/AUTH_aabbccdd001122/mybucket/index.html HTTP/1.1\r\nHost:\ objectstorage.ps5.internal\r\nUser-Agent:\ haproxy/httpchk
    http-request set-header Host objectstorage.ps5.internal
    option redispatch 1
    balance leastconn
    server server_1 10.0.1.10:443 check inter 5s rise 2 fall 5 maxconn 200 ssl sni str(objectstorage.ps5.internal) check-sni objectstorage.ps5.internal verify required ca-file ca-certificates.crt
