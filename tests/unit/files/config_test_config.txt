configs:
  backends: &BACKENDS ['127.0.1.10:80', '127.0.1.11:80', '127.0.1.12:80']
  hmac_key: &HMAC_KEY SrRorTsImr92B6FfSKBFrSIiR5NYGS+gdjd8oGoVH44=

# Test 1: The basic port and backends (HTTP)
site1.local:
  port: 80
  locations:
    /:
      backends: *BACKENDS
      signed-url-hmac-key: *HMAC_KEY
      origin-headers:
        - X-Origin-Key: Sae6oob2aethuosh
        - X-Some-Header-1: something one two three
        - X-Some-Header-2: something:one:two:three
  # Test multiple default sites, last one wins.
  default: True

# Test 2: TLS/SSL as well as backends (HTTPS), with custom backend-maxconn
site2.local:
  tls-cert-bundle-path: /etc/haproxy/site2-bundle.crt
  redirect-http-to-https: True
  locations:
    /:
      backend-tls: True
      backend-check-method: GET
      backend-check-path: /check/
      backend-maxconn: 1024
      backends:
        - 127.0.1.10:443
        - 127.0.1.11:443
        - 127.0.1.12:443
    /my-local-content/:
      extra-config:
        - root /var/www/html
    /my-local-content2/:
      extra-config:
        - root /var/www/html
  # Test default site with only a single backend.
  default: True

# Test 3: No port, just backends (HTTP), with custom cache-maxconn
site3.local:
  default: True
  locations:
    /:
      backends: *BACKENDS
      backend-options:
        - forwardfor except 127.0.0.1 192.168.1.1
        - forceclose
      cache-maxconn: 4096

# Test 4: No backends, a few local content
site4.local:
  locations:
    /:
      extra-config:
        - autoindex on
    /ubuntu/pool/:
      extra-config:
        - autoindex on
        - auth_request /auth

# Test 5: Multiple backends
site5:
  site-name: site5.local
  locations:
    /:
      backends:
        - 127.0.1.10:80
    /auth:
      modifier: '='
      backends:
        - 127.0.1.11:80
      backend-path: /auth-check/
      cache-background-update: None
      cache-min-uses: None
      cache-validity: '200 401 1h'

# Test 6: TLS/SSL/HTTPS to backends only
site6.local:
  locations:
    /:
      backend-tls: True
      backends:
        - 127.0.1.10:443

# Test 7: TLS/SSL frontend but plain HTTP to backend
site7.local:
  port: 444
  tls-cert-bundle-path: /etc/haproxy/site7-bundle.crt
  locations:
    /:
      backend-tls: False
      backends:
        - 127.0.1.10:80

# Test 8: per-location backend site-name
site8.local:
  port: 444
  tls-cert-bundle-path: /etc/haproxy/site8-bundle.crt
  locations:
    /:
      backend-tls: False
      backends:
        - 127.0.1.10:80
      cache-valid: '200 6h'
    /auth:
      backend-tls: True
      backends:
        - 127.0.1.10:443
      cache-valid: ['200 1h', '401 15m']
      site-name: auth.site8.local

# Test 9: Custom backend-inter-time
site9.local:
  locations:
    /:
      backend-tls: False
      backend-inter-time: '1m'
      backends:
        - 127.0.1.15:80
      cache-validity: ['200 1h', '401 30m']
      extra-config:
        - proxy_force_ranges off
    /private/content:
      extra-config:
        - root /srv/example1.com/content/
        - autoindex on
        - auth_request /auth
      nagios-expect: 401 Unauthorized

# Test 10: if statement within extra-config
site10.local:
  locations:
    /:
      extra-config:
        - root /var/www/html
        - if ($args ~* ".*call_user.*") { rewrite ^ /? permanent; }
        - if ($args ~* ".*call_user2.*") {
                rewrite ^ /? permanent;
          } else { rewrite ^ /somewherelse? permanent; }
        - autoindex on
