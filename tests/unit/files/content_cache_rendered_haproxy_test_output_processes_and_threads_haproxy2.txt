global
    nbthread 30
    maxconn 523093
    log /dev/log local0
    log /dev/log local1 notice
    chroot /var/lib/haproxy
    stats socket /run/haproxy/admin.sock mode 660 level admin expose-fd listeners
    stats timeout 30s
    server-state-file /run/haproxy/saved-server-state
    user haproxy
    group haproxy
    daemon

    # LP#1874386: Work around lingering HAProxy processes as per LP:1874386
    # and kill them off.
    hard-stop-after 15m

    # Default SSL material locations
    ca-base /etc/ssl/certs
    crt-base /etc/ssl/private

    # Default ciphers to use on SSL-enabled listening sockets.
    # For more information, see ciphers(1SSL). This list is from:
    #  https://hynek.me/articles/hardening-your-web-servers-ssl-ciphers/
    # An alternative list with additional directives can be obtained from
    #  https://mozilla.github.io/server-side-tls/ssl-config-generator/?server=haproxy
    ssl-default-bind-ciphers ECDHE+AESGCM:ECDHE+AES256:ECDHE+AES128:!SSLv3:!TLSv1
    ssl-default-bind-options no-sslv3 no-tlsv10 no-tlsv11
    # We'll eventually disable DHE (LP#1825321), but for now, bump DH params
    tune.ssl.default-dh-param 2048

    # Increase the SSL/TLS session cache from the default 20k. But
    # rather than hardcode values, let's just set it to match
    # global_max_connections (which by default is calculated using
    # num. of CPU cores and num. of configured sites). Each entry
    # requires ~200 bytes so on a host with say 32 CPUs, 10 sites,
    # each with 2000 max conns will only consume around 122 Mbytes
    # (32 * 10 * 2000 * 200), which is not much.
    tune.ssl.cachesize 523093

defaults
    log global
    maxconn 60000
    mode http
    option dontlognull
    timeout connect 5s
    timeout client  50s
    timeout server  50s
    errorfile 400 /etc/haproxy/errors/400.http
    errorfile 403 /etc/haproxy/errors/403.http
    errorfile 408 /etc/haproxy/errors/408.http
    errorfile 500 /etc/haproxy/errors/500.http
    errorfile 502 /etc/haproxy/errors/502.http
    errorfile 503 /etc/haproxy/errors/503.http
    errorfile 504 /etc/haproxy/errors/504.http
    load-server-state-from-file global
    unique-id-format %{+X}o\ %ci:%cp_%fi:%fp_%Ts_%rt:%pid
    unique-id-header X-Cache-Request-ID
    log-format "%ci:%cp [%tr] %ft %b/%s %TR/%Tw/%Tc/%Tr/%Ta %ST %B %CC %CS %tsc %ac/%fc/%bc/%sc/%rc %sq/%bq %hr %hs %{+Q}r %ID"

resolvers dns
    nameserver dns1 127.0.0.53:53
    resolve_retries 3
    timeout resolve 3s
    timeout retry   3s
    accepted_payload_size 8192

listen  stats
    bind 127.0.0.1:10000
    acl allowed_cidr src 127.0.0.0/8
    http-request deny unless allowed_cidr

    mode http
    stats enable
    stats uri /
    stats realm Haproxy\ Statistics
    stats auth haproxy:biometricsarenotsecret
    stats refresh 3
    no log


listen combined-80
    bind 0.0.0.0:80
    bind :::80
    capture request header X-Cache-Request-ID len 60
    capture request header Host len 60
    redirect scheme https code 301 if { hdr(Host) -i site2.local } !{ ssl_fc }
    use_backend backend-cached-site1-local if { hdr(Host) -i site1.local }
    use_backend backend-cached-site3-local if { hdr(Host) -i site3.local }
    use_backend backend-cached-site4-local if { hdr(Host) -i site4.local }
    use_backend backend-cached-site5 if { hdr(Host) -i site5.local }
    use_backend backend-cached-site6-local if { hdr(Host) -i site6.local }
    use_backend backend-cached-site9-local if { hdr(Host) -i site9.local }
    use_backend backend-cached-site10-local if { hdr(Host) -i site10.local }
    http-request set-log-level silent if { hdr(Host) -i site11.local }
    use_backend backend-cached-site11-local if { hdr(Host) -i site11.local }
    use_backend backend-cached-site12-local if { hdr(Host) -i site12.local }
    default_backend backend-cached-site3-local

listen site1-local
    bind 127.0.0.1:8080
    capture request header X-Cache-Request-ID len 60
    capture request header Host len 60
    default_backend backend-site1-local

listen cached-site2-local
    bind 0.0.0.0:443 ssl crt /etc/haproxy/site2-bundle.crt alpn h2,http/1.1
    bind :::443 ssl crt /etc/haproxy/site2-bundle.crt alpn h2,http/1.1
    capture request header X-Cache-Request-ID len 60
    capture request header Host len 60
    default_backend backend-cached-site2-local

listen site2-local
    bind 127.0.0.1:8081
    capture request header X-Cache-Request-ID len 60
    capture request header Host len 60
    default_backend backend-site2-local

listen site3-local
    bind 127.0.0.1:8082
    capture request header X-Cache-Request-ID len 60
    capture request header Host len 60
    default_backend backend-site3-local

listen site5
    bind 127.0.0.1:8083
    capture request header X-Cache-Request-ID len 60
    capture request header Host len 60
    default_backend backend-site5

listen site5-2
    bind 127.0.0.1:8084
    capture request header X-Cache-Request-ID len 60
    capture request header Host len 60
    default_backend backend-site5-2

listen site6-local
    bind 127.0.0.1:8085
    capture request header X-Cache-Request-ID len 60
    capture request header Host len 60
    default_backend backend-site6-local

listen combined-444
    bind 0.0.0.0:444 ssl crt /etc/haproxy/site7-bundle.crt crt /etc/haproxy/site8-bundle.crt alpn h2,http/1.1
    bind :::444 ssl crt /etc/haproxy/site7-bundle.crt crt /etc/haproxy/site8-bundle.crt alpn h2,http/1.1
    capture request header X-Cache-Request-ID len 60
    capture request header Host len 60
    use_backend backend-cached-site7-local if { hdr(Host) -i site7.local }
    use_backend backend-cached-site8-local if { hdr(Host) -i site8.local }

listen site7-local
    bind 127.0.0.1:8086
    capture request header X-Cache-Request-ID len 60
    capture request header Host len 60
    default_backend backend-site7-local

listen site8-local
    bind 127.0.0.1:8087
    capture request header X-Cache-Request-ID len 60
    capture request header Host len 60
    default_backend backend-site8-local

listen site8-local-2
    bind 127.0.0.1:8088
    capture request header X-Cache-Request-ID len 60
    capture request header Host len 60
    default_backend backend-site8-local-2

listen site9-local
    bind 127.0.0.1:8089
    capture request header X-Cache-Request-ID len 60
    capture request header Host len 60
    default_backend backend-site9-local

listen site11-local
    bind 127.0.0.1:8090
    capture request header X-Cache-Request-ID len 60
    capture request header Host len 60
    default_backend backend-site11-local

listen site12-local
    bind 127.0.0.1:8091
    capture request header X-Cache-Request-ID len 60
    capture request header Host len 60
    default_backend backend-site12-local

backend backend-cached-site1-local
    option httpchk HEAD /?token=1861920000_f3e404e205ed44749e942d481f7a7bec57c5e78a HTTP/1.1
    http-check send hdr Host site1.local hdr User-Agent haproxy/httpchk
    http-request set-header Host site1.local
    http-request set-header X-Forwarded-For %[src]
    balance leastconn
    server server_1 127.0.0.1:6080 check inter 2s rise 2 fall 60 maxconn 600

backend backend-site1-local
    option httpchk HEAD / HTTP/1.1
    http-check send hdr Host site1.local hdr User-Agent haproxy/httpchk
    http-request set-header Host site1.local
    retry-on all-retryable-errors
    option redispatch 1
    balance leastconn
    server server_1 127.0.1.10:80 check inter 5s rise 2 fall 5 maxconn 200
    server server_2 127.0.1.11:80 check inter 5s rise 2 fall 5 maxconn 200
    server server_3 127.0.1.12:80 check inter 5s rise 2 fall 5 maxconn 200

backend backend-cached-site2-local
    option httpchk GET /_status/content-cache-check HTTP/1.1
    http-check send hdr Host site2.local hdr User-Agent haproxy/httpchk
    http-request set-header Host site2.local
    http-request set-header X-Forwarded-For %[src]
    balance leastconn
    server server_1 127.0.0.1:6081 check inter 2s rise 2 fall 60 maxconn 3072

backend backend-site2-local
    option httpchk GET /check/ HTTP/1.1
    http-check send hdr Host site2.local hdr User-Agent haproxy/httpchk
    http-request set-header Host site2.local
    retry-on all-retryable-errors
    option redispatch 1
    balance leastconn
    server server_1 127.0.1.10:443 check inter 5s rise 2 fall 5 maxconn 1024 ssl sni str(site2.local) check-sni site2.local verify required ca-file ca-certificates.crt alpn h2,http/1.1 check-alpn http/1.1
    server server_2 127.0.1.11:443 check inter 5s rise 2 fall 5 maxconn 1024 ssl sni str(site2.local) check-sni site2.local verify required ca-file ca-certificates.crt alpn h2,http/1.1 check-alpn http/1.1
    server server_3 127.0.1.12:443 check inter 5s rise 2 fall 5 maxconn 1024 ssl sni str(site2.local) check-sni site2.local verify required ca-file ca-certificates.crt alpn h2,http/1.1 check-alpn http/1.1

backend backend-cached-site3-local
    option httpchk GET /_status/content-cache-check HTTP/1.1
    http-check send hdr Host site3.local hdr User-Agent haproxy/httpchk
    http-request set-header Host site3.local
    http-request set-header X-Forwarded-For %[src]
    balance leastconn
    server server_1 127.0.0.1:6082 check inter 2s rise 2 fall 60 maxconn 4096

backend backend-site3-local
    option httpchk HEAD / HTTP/1.1
    http-check send hdr Host site3.local hdr User-Agent haproxy/httpchk
    http-request set-header Host site3.local
    option forwardfor except 127.0.0.1 192.168.1.1
    option forceclose
    retry-on all-retryable-errors
    option redispatch 1
    balance leastconn
    server server_1 127.0.1.10:80 check inter 5s rise 2 fall 5 maxconn 200
    server server_2 127.0.1.11:80 check inter 5s rise 2 fall 5 maxconn 200
    server server_3 127.0.1.12:80 check inter 5s rise 2 fall 5 maxconn 200

backend backend-cached-site4-local
    option httpchk GET /_status/content-cache-check HTTP/1.1
    http-check send hdr Host site4.local hdr User-Agent haproxy/httpchk
    http-request set-header Host site4.local
    http-request set-header X-Forwarded-For %[src]
    balance leastconn
    server server_1 127.0.0.1:6083 check inter 2s rise 2 fall 60 maxconn 200

backend backend-cached-site5
    option httpchk GET /_status/content-cache-check HTTP/1.1
    http-check send hdr Host site5.local hdr User-Agent haproxy/httpchk
    http-request set-header Host site5.local
    http-request set-header X-Forwarded-For %[src]
    balance leastconn
    server server_1 127.0.0.1:6084 check inter 2s rise 2 fall 60 maxconn 200

backend backend-site5
    option httpchk HEAD / HTTP/1.1
    http-check send hdr Host site5.local hdr User-Agent haproxy/httpchk
    http-request set-header Host site5.local
    retry-on all-retryable-errors
    option redispatch 1
    balance leastconn
    server server_1 127.0.1.10:80 check inter 5s rise 2 fall 5 maxconn 200

backend backend-site5-2
    option httpchk HEAD /status HTTP/1.1
    http-check send hdr Host site5.local hdr User-Agent haproxy/httpchk
    http-request set-header Host site5.local
    retry-on all-retryable-errors
    option redispatch 1
    balance leastconn
    server server_1 127.0.1.11:80 check inter 5s rise 2 fall 5 maxconn 200

backend backend-cached-site6-local
    option httpchk GET /_status/content-cache-check HTTP/1.1
    http-check send hdr Host site6.local hdr User-Agent haproxy/httpchk
    http-request set-header Host site6.local
    http-request set-header X-Forwarded-For %[src]
    balance leastconn
    server server_1 127.0.0.1:6085 check inter 2s rise 2 fall 60 maxconn 200

backend backend-site6-local
    option httpchk HEAD / HTTP/1.1
    http-check send hdr Host site6.local hdr User-Agent haproxy/httpchk
    http-request set-header Host site6.local
    retry-on all-retryable-errors
    option redispatch 1
    balance leastconn
    server server_1 127.0.1.10:443 check inter 5s rise 2 fall 5 maxconn 200 ssl sni str(site6.local) check-sni site6.local verify required ca-file ca-certificates.crt alpn h2,http/1.1 check-alpn http/1.1

backend backend-cached-site7-local
    option httpchk GET /_status/content-cache-check HTTP/1.1
    http-check send hdr Host site7.local hdr User-Agent haproxy/httpchk
    http-request set-header Host site7.local
    http-request set-header X-Forwarded-For %[src]
    balance leastconn
    server server_1 127.0.0.1:6086 check inter 2s rise 2 fall 60 maxconn 200

backend backend-site7-local
    option httpchk HEAD / HTTP/1.1
    http-check send hdr Host site7.local hdr User-Agent haproxy/httpchk
    http-request set-header Host site7.local
    retry-on all-retryable-errors
    option redispatch 1
    balance leastconn
    server server_1 127.0.1.10:80 check inter 5s rise 2 fall 5 maxconn 200

backend backend-cached-site8-local
    option httpchk GET /_status/content-cache-check HTTP/1.1
    http-check send hdr Host site8.local hdr User-Agent haproxy/httpchk
    http-request set-header Host site8.local
    http-request set-header X-Forwarded-For %[src]
    balance leastconn
    server server_1 127.0.0.1:6087 check inter 2s rise 2 fall 60 maxconn 200

backend backend-site8-local
    option httpchk HEAD / HTTP/1.1
    http-check send hdr Host site8.local hdr User-Agent haproxy/httpchk
    http-request set-header Host site8.local
    retry-on all-retryable-errors
    option redispatch 1
    balance leastconn
    server server_1 127.0.1.10:80 check inter 5s rise 2 fall 5 maxconn 200

backend backend-site8-local-2
    option httpchk HEAD / HTTP/1.1
    http-check send hdr Host auth.site8.local hdr User-Agent haproxy/httpchk
    http-request set-header Host auth.site8.local
    retry-on all-retryable-errors
    option redispatch 1
    balance leastconn
    server server_1 127.0.1.10:443 check inter 5s rise 2 fall 5 maxconn 200 ssl sni str(auth.site8.local) check-sni auth.site8.local verify required ca-file ca-certificates.crt alpn h2,http/1.1 check-alpn http/1.1

backend backend-cached-site9-local
    option httpchk GET /_status/content-cache-check HTTP/1.1
    http-check send hdr Host site9.local hdr User-Agent haproxy/httpchk
    stick-table type ip size 1m expire 30s store http_req_rate(10s)
    http-request track-sc0 src
    http-request deny deny_status 429 if { sc_http_req_rate(0) gt 20 }
    http-request set-header Host site9.local
    http-request set-header X-Forwarded-For %[src]
    balance leastconn
    server server_1 127.0.0.1:6088 check inter 2s rise 2 fall 60 maxconn 200

backend backend-site9-local
    option httpchk HEAD / HTTP/1.1
    http-check send hdr Host site9.local hdr User-Agent haproxy/httpchk
    http-request set-header Host site9.local
    retry-on all-retryable-errors
    option redispatch 1
    balance leastconn
    server server_1 127.0.1.15:80 check inter 1m rise 2 fall 5 maxconn 200

backend backend-cached-site10-local
    option httpchk GET /_status/content-cache-check HTTP/1.1
    http-check send hdr Host site10.local hdr User-Agent haproxy/httpchk
    http-request set-header Host site10.local
    http-request set-header X-Forwarded-For %[src]
    balance leastconn
    server server_1 127.0.0.1:6089 check inter 2s rise 2 fall 60 maxconn 200

backend backend-cached-site11-local
    option httpchk GET /_status/content-cache-check HTTP/1.1
    http-check send hdr Host site11.local hdr User-Agent haproxy/httpchk
    http-request set-header Host site11.local
    http-request set-header X-Forwarded-For %[src]
    acl restricted_page query -m reg ^q=............$
    http-request deny if restricted_page
    balance leastconn
    server server_1 127.0.0.1:6090 check inter 2s rise 2 fall 60 maxconn 600

backend backend-site11-local
    option httpchk HEAD / HTTP/1.1
    http-check send hdr Host site11.local hdr User-Agent haproxy/httpchk
    http-request set-header Host site11.local
    option forwardfor except 127.0.0.1 192.168.1.1
    option forceclose
    retry-on all-retryable-errors
    option redispatch 1
    balance leastconn
    server server_1 127.0.1.10:80 check inter 5s rise 2 fall 5 maxconn 200
    server server_2 127.0.1.11:80 check inter 5s rise 2 fall 5 maxconn 200
    server server_3 127.0.1.12:80 check inter 5s rise 2 fall 5 maxconn 200

backend backend-cached-site12-local
    option httpchk GET /_status/content-cache-check HTTP/1.1
    http-check send hdr Host site12.local hdr User-Agent haproxy/httpchk
    http-request set-header Host site12.local
    http-request set-header X-Forwarded-For %[src]
    balance leastconn
    server server_1 127.0.0.1:6091 check inter 2s rise 2 fall 60 maxconn 600

backend backend-site12-local
    option httpchk HEAD / HTTP/1.1
    http-check send hdr Host site12.local hdr User-Agent haproxy/httpchk
    http-request set-header Host site12.local
    retry-on all-retryable-errors
    option redispatch 1
    balance leastconn
    server server_1 127.0.1.10:80 check inter 5s rise 2 fall 5 maxconn 200
    server server_2 127.0.1.11:80 check inter 5s rise 2 fall 5 maxconn 200
    server server_3 127.0.1.12:80 check inter 5s rise 2 fall 5 maxconn 200
