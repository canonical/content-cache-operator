global
	nbproc 4
	log /dev/log	local0
	log /dev/log	local1 notice
	chroot /var/lib/haproxy
	stats socket /run/haproxy/admin.sock mode 660 level admin expose-fd listeners
	stats timeout 30s
	user haproxy
	group haproxy
	daemon

	# Default SSL material locations
	ca-base /etc/ssl/certs
	crt-base /etc/ssl/private

	# Default ciphers to use on SSL-enabled listening sockets.
	# For more information, see ciphers(1SSL). This list is from:
	#  https://hynek.me/articles/hardening-your-web-servers-ssl-ciphers/
	# An alternative list with additional directives can be obtained from
	#  https://mozilla.github.io/server-side-tls/ssl-config-generator/?server=haproxy
	ssl-default-bind-ciphers ECDH+AESGCM:DH+AESGCM:ECDH+AES256:DH+AES256:ECDH+AES128:DH+AES:RSA+AESGCM:RSA+AES:!aNULL:!MD5:!DSS
	ssl-default-bind-options no-sslv3

defaults
	log	global
	mode	http
	option	httplog
	option	dontlognull
	timeout connect 5000
	timeout client  50000
	timeout server  50000
	errorfile 400 /etc/haproxy/errors/400.http
	errorfile 403 /etc/haproxy/errors/403.http
	errorfile 408 /etc/haproxy/errors/408.http
	errorfile 500 /etc/haproxy/errors/500.http
	errorfile 502 /etc/haproxy/errors/502.http
	errorfile 503 /etc/haproxy/errors/503.http
	errorfile 504 /etc/haproxy/errors/504.http


listen combined-80
    bind 0.0.0.0:80
    use_backend backend-site1-local if { hdr(Host) -i site1.local }
    use_backend backend-site3-local if { hdr(Host) -i site3.local }

listen site2-local
    bind 0.0.0.0:443 ssl crt /etc/haproxy/some-bundle.crt
    default_backend backend-site2-local

backend backend-site1-local
    option httpchk HEAD /?token=1868533200_bd98d0a61eb5006de53d00549ba0f78b365b72ad HTTP/1.0\r\nHost:\ site1.local\r\nUser-Agent:\ haproxy/httpchk
    http-request set-header Host site1.local
    balance leastconn
    server server_1 127.0.1.10:80 check inter 5000 rise 2 fall 5 maxconn 16
    server server_2 127.0.1.11:80 check inter 5000 rise 2 fall 5 maxconn 16
    server server_3 127.0.1.12:80 check inter 5000 rise 2 fall 5 maxconn 16

backend backend-site2-local
    option httpchk GET /check/ HTTP/1.0\r\nHost:\ site2.local\r\nUser-Agent:\ haproxy/httpchk
    http-request set-header Host site2.local
    balance leastconn
    server server_1 127.0.1.10:443 check inter 5000 rise 2 fall 5 maxconn 16 ssl sni str(site2.local) check-sni site2.local verify required ca-file ca-certificates.crt
    server server_2 127.0.1.11:443 check inter 5000 rise 2 fall 5 maxconn 16 ssl sni str(site2.local) check-sni site2.local verify required ca-file ca-certificates.crt
    server server_3 127.0.1.12:443 check inter 5000 rise 2 fall 5 maxconn 16 ssl sni str(site2.local) check-sni site2.local verify required ca-file ca-certificates.crt

backend backend-site3-local
    option forwardfor except 127.0.0.1
    option forceclose
    option httpchk HEAD / HTTP/1.0\r\nHost:\ site3.local\r\nUser-Agent:\ haproxy/httpchk
    http-request set-header Host site3.local
    balance leastconn
    server server_1 127.0.1.10:80 check inter 5000 rise 2 fall 5 maxconn 16
    server server_2 127.0.1.11:80 check inter 5000 rise 2 fall 5 maxconn 16
    server server_3 127.0.1.12:80 check inter 5000 rise 2 fall 5 maxconn 16
